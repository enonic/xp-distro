name: Gradle Build

on:
  push:
  repository_dispatch:
    types: [app-main, app-users, app-applications, app-standardidprovider]

jobs:
  build:
    strategy:
      matrix:
        type: [sdk, server]
        os: [macos, linux, windows]
        include:
          - type: generic
            os: linux

    runs-on: ubuntu-latest

    needs: release_notes_combined

    steps:
      - uses: actions/checkout@v2.3.1
        with:
          ref: ${{ github.event.client_payload.ref }}

      - uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      ### PUBLISHING STEPS ###

      - name: Get publishing variables
        id: publish_vars
        uses: enonic/release-tools/publish-vars@master
        env:
          PROPERTIES_PATH: './gradle.properties'
          JAVA_HOME: ''

      - name: Publish
        if: github.ref == 'refs/heads/master' || contains(github.ref, 'refs/heads/7.')
        run: ./gradlew publish -Pos=${{ matrix.os }} -Ptype=${{ matrix.type }} -PrepoKey=${{ steps.publish_vars.outputs.repo }} -PrepoUser=${{ secrets.ARTIFACTORY_USERNAME }} -PrepoPassword=${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Download changelog
        if: steps.publish_vars.outputs.release == 'true' && matrix.type == 'generic'
        uses: actions/download-artifact@v2
        with:
          name: changelog

      - name: Create Release
        if: steps.publish_vars.outputs.release == 'true' && matrix.type == 'generic'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.publish_vars.outputs.tag_name }}
          body_path: changelog.md
          release_name: Enonic XP Distro ${{ steps.publish_vars.outputs.version }}
          prerelease: ${{ steps.publish_vars.outputs.prerelease == 'true' }}

  release_notes:
    strategy:
      matrix:
        repository: [app-admin-home, app-applications, app-users, app-standardidprovider, xp]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.1
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Read version property
        id: read_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'version'

      - name: Get Release
        if: "!contains(steps.read_version.outputs.value, '-SNAPSHOT')"
        uses: octokit/request-action@v2.x
        id: get_release
        with:
          route: GET /repos/:repository/releases/tags/:tag
          repository: enonic/${{ matrix.repository }}
          tag: v${{ steps.read_version.outputs.value }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create file
        run: |
          echo '' >> changelog_${{ matrix.repository }}.md

      - name: Save to file
        if: "!contains(steps.read_version.outputs.value, '-SNAPSHOT')"
        run: |
            printf '%b\n' "${{ fromJson(steps.get_release.outputs.data).body }}" >> changelog_${{ matrix.repository }}.md

      - uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: changelog_${{ matrix.repository }}.md

  release_notes_combined:
    runs-on: ubuntu-latest

    needs: release_notes

    steps:

      - name: Download changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog

      - name: Combine Release Notes
        uses: enonic/release-tools/changelog-combiner@master
        env:
          INUPT_FILES: "changelog_*.md"
          OUTPUT_FILE: changelog.md

      - uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: changelog.md
